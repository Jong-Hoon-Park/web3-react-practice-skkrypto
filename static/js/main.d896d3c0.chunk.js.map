{"version":3,"sources":["connectors/index.js","constant/index.js","components/CounterGet.js","components/CounterInc.js","components/CounterDec.js","App.js","library/index.js","index.js"],"names":["injectedConnector","InjectedConnector","supportedChainIds","COUNTER_ABI","COUNTER_ADDRESS","CountGet","useState","count","setCount","library","useWeb3React","onClick","ethers","Contract","get","then","result","toNumber","style","color","backgroundColor","CounterInc","account","signer","getSigner","connectUnchecked","inc","CounterDec","dec","App","chainId","activate","active","getLibrary","provider","Web3Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNACaA,EAAmB,I,MAAIC,GAAkB,CAClDC,kBAAmB,CAAC,EAAE,EAAE,EAAE,EAAE,M,gBCFnBC,EAAc,CACvB,4CACA,yBACA,yBAGSC,EAAkB,6CCwBhBC,MAzBf,WACI,MAA2BC,mBAAU,GAArC,mBAAQC,EAAR,KAAeC,EAAf,KACQC,EAAYC,cAAZD,QAYR,OACI,gCACI,wBAAQE,QAbJ,WACgB,IAAIC,IAAOC,SAC/BT,EACAD,EACAM,GAEYK,MAAMC,MAAK,SAACC,GACxBR,EAASQ,EAAOC,gBAMMC,MAAO,CAACC,MAAM,QAAQC,gBAAgB,UAA5D,uBAGA,8BACKb,QCJFc,MAjBf,WACI,MAA4BX,cAApBD,EAAR,EAAQA,QAASa,EAAjB,EAAiBA,QAajB,OAAO,wBAAQX,QAXH,WACR,IAAMY,EAAM,OAAGd,QAAH,IAAGA,OAAH,EAAGA,EAASe,UAAUF,GAASG,mBACnB,IAAIb,IAAOC,SAC/BT,EACAD,EACAoB,GAEYG,MAAMX,MAAK,gBAIxB,kBCGIY,MAjBf,WACI,MAA4BjB,cAApBD,EAAR,EAAQA,QAASa,EAAjB,EAAiBA,QAajB,OAAO,wBAAQX,QAXH,WACR,IAAMY,EAAM,OAAGd,QAAH,IAAGA,OAAH,EAAGA,EAASe,UAAUF,GAASG,mBACnB,IAAIb,IAAOC,SAC/BT,EACAD,EACAoB,GAEYK,MAAMb,MAAK,gBAIxB,kBCmBIc,MA1Bf,WACE,MAA6CnB,cAAtCoB,EAAP,EAAOA,QAASR,EAAhB,EAAgBA,QAASS,EAAzB,EAAyBA,SAAUC,EAAnC,EAAmCA,OAInC,OACE,gCACE,6CAAgBF,KAChB,4CAAeR,KACdU,EACC,6CAKA,wBAAQrB,QAbE,WACdoB,EAAS/B,IAYsBkB,MAAO,CAACC,MAAM,QAAQC,gBAAgB,SAAjE,qBAGF,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,QCzBWa,MALjB,SAAoBC,GAEhB,OADgB,IAAIC,IAAaD,ICIrCE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAmBL,WAAYA,EAA/B,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,U","file":"static/js/main.d896d3c0.chunk.js","sourcesContent":["import { InjectedConnector } from \"@web3-react/injected-connector\";\r\nexport const injectedConnector= new InjectedConnector({\r\n    supportedChainIds: [1,3,4,5,42],\r\n});","export const COUNTER_ABI = [\r\n    'function get() public view returns (uint)',\r\n    ' function inc() public',\r\n    'function dec() public'\r\n];\r\n\r\nexport const COUNTER_ADDRESS = \"0xA19E820dd1513a72A8f9E6b1b64Ba9378c97b15c\"","import {useWeb3React} from \"@web3-react/core\"\r\nimport {useState} from \"react\"\r\nimport {ethers} from \"ethers\"\r\nimport {COUNTER_ABI, COUNTER_ADDRESS} from \"../constant\"\r\n\r\nfunction CountGet() {\r\n    const [ count, setCount] = useState (0)\r\n    const { library } = useWeb3React()\r\n    const get = () => {\r\n        const counterContract = new ethers.Contract(\r\n            COUNTER_ADDRESS,\r\n            COUNTER_ABI,\r\n            library\r\n            );\r\n        counterContract.get().then((result) => {\r\n            setCount(result.toNumber() )\r\n        }    )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <button onClick={get} style={{color:\"white\",backgroundColor:\"purple\"}}>\r\n                Get Count\r\n            </button>\r\n            <div>\r\n                {count}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CountGet","import {useWeb3React} from \"@web3-react/core\";\r\nimport {ethers} from \"ethers\";\r\nimport {COUNTER_ABI,COUNTER_ADDRESS} from \"../constant\";\r\n\r\nfunction CounterInc() {\r\n    const { library, account} = useWeb3React();\r\n\r\n    const inc = () => {\r\n        const signer = library?.getSigner(account).connectUnchecked();\r\n        const counterContract = new ethers.Contract (\r\n            COUNTER_ADDRESS,\r\n            COUNTER_ABI,\r\n            signer\r\n        );\r\n        counterContract.inc().then(() => {\r\n\r\n        })\r\n    };\r\n    return(<button onClick = {inc}>Inc</button>)\r\n    ;\r\n}\r\nexport default CounterInc;","import {useWeb3React} from \"@web3-react/core\";\r\nimport {ethers} from \"ethers\";\r\nimport {COUNTER_ABI,COUNTER_ADDRESS} from \"../constant\";\r\n\r\nfunction CounterDec() {\r\n    const { library, account} = useWeb3React();\r\n\r\n    const dec = () => {\r\n        const signer = library?.getSigner(account).connectUnchecked();\r\n        const counterContract = new ethers.Contract (\r\n            COUNTER_ADDRESS,\r\n            COUNTER_ABI,\r\n            signer\r\n        );\r\n        counterContract.dec().then(() => {\r\n\r\n        })\r\n    };\r\n    return(<button onClick = {dec}>Dec</button>)\r\n    ;\r\n}\r\nexport default CounterDec;","import {ColoredButton, ConnectButton} from \"./components/Button\";\nimport {useWeb3React} from \"@web3-react/core\";\nimport { injectedConnector } from \"./connectors\";\nimport CountGet from \"./components/CounterGet\";\nimport CounterInc from \"./components/CounterInc\";\nimport CounterDec from \"./components/CounterDec\";\n\n\n\n\n\nfunction App() {\n  const {chainId, account, activate, active} = useWeb3React()\n  const onClick = () => {\n    activate(injectedConnector);\n  };\n  return (\n    <div>\n      <div>Chain Id: {chainId}</div>\n      <div>Account: {account}</div>\n      {active ? (\n        <div>\n          Connected!\n        </div>\n\n      ): (\n        <button onClick = {onClick}style={{color:\"white\",backgroundColor:\"green\"}}>connect</button>\n\n      )}\n      <CountGet/>\n      <CounterInc/>\n      <CounterDec/>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { Web3Provider } from \"@ethersproject/providers\";\r\nfunction getLibrary(provider) {\r\n    const library = new Web3Provider(provider);\r\n    return library;\r\n  }\r\n  \r\n  export default getLibrary;\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Web3ReactProvider} from \"@web3-react/core\";\nimport getLibrary from \"./library/\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}